{"version":3,"sources":["services/user.js","services/address.js","components/AddressForm.jsx","components/Form.jsx","components/UserAddress.jsx","components/Address.jsx","services/product.js","services/cart.js","services/payments.js","components/CartProducts.jsx","components/CartSummary.jsx","components/CardForm.jsx","components/Card.jsx","components/Payments.jsx","components/Cart.jsx","components/Navbar.jsx","components/Products.jsx","components/Container.jsx","App.js","serviceWorker.js","index.js"],"names":["user","id","firstName","lastName","phone","img","emailId","cart","addresses","addressLine1","addressLine2","landmark","city","isdefault","payments","cards","number","expiry","cvv","saveAddress","address","forEach","key","newId","length","toString","push","addressInDB","find","savedaddress","index","indexOf","AddressForm","data","errors","handleChange","handleSubmit","toggleClose","className","type","name","value","autoComplete","onChange","e","placeholder","onClick","disabled","Object","keys","Form","state","validate","error","Joi","object","schema","details","item","path","message","validateProperty","obj","input","currentTarget","errorMessage","setState","Component","UserAddress","addressData","selectedAddress","handleEdit","isdelete","map","Address","toggleAddress","string","min","required","label","boolean","preventDefault","toggleOpen","addressdata","props","this","products","getProducts","getCartItems","getTotalItems","addToCart","product","inCart","cartobj","productId","selectedItems","removeFromCart","deleteFromCart","splice","CartProducts","src","alt","to","CartSummary","grandtotal","total","CardForm","handleInputChange","handleInputFocus","onKeyUp","onFocus","maxLength","cvc","Card","Payment","formatCardNumber","document","querySelector","formatCardExpiry","formatCardCVC","focus","isValidCallback","isValid","focused","callback","Payments","selectedpayment","toggleCard","choosePayment","card","target","replace","bind","Cart","deliveryaddress","paymentby","mapProducts","cartObj","price","setDeliveryAddress","changeDeliveryAddress","handleCartCount","Fragment","Navbar","totalCartItems","style","zIndex","title","Products","Img","variant","Body","Title","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","desc","Text","Container","role","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.8172bfd9.chunk.js","sourcesContent":["let user = {\r\n    id:'1',\r\n    firstName:'Aditya',\r\n    lastName:'Pimpalkar',\r\n    phone:\"9757135624\",\r\n    img:'',\r\n    emailId:'adipimpalkar14@gmail.com',\r\n    cart:[\r\n        {\r\n            \"productId\": \"3\",\r\n            \"selectedItems\": 2\r\n        }\r\n    ],\r\n    addresses: [\r\n        {\r\n            id:\"1\",\r\n            addressLine1:\"B-10, Shri Kaustubh Aparatment\",\r\n            addressLine2:\"Thane Station\",\r\n            landmark:\"Opposite,Mangla High school,Kopri\",\r\n            city:\"THANE(EAST)\",\r\n            isdefault: false\r\n        },\r\n        {\r\n            id:\"2\",\r\n            addressLine1:\"11, Prajakta Society, Opposite Hanuman temple\",\r\n            addressLine2:\"Brahman society, Hitavardhani road\",\r\n            landmark:\"Hitavardhani road, Naupada\",\r\n            city:\"THANE\",\r\n            isdefault: true\r\n        }\r\n    ],\r\n    payments: {\r\n        cards:[\r\n            {\r\n                number:\"2345678901234567\",\r\n                expiry:\"01/23\",\r\n                cvv:\"234\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nexport default user;\r\n\r\n// {payments.cards.length > 0 ?\r\n\r\n//     payments.cards.map((card,index) => (\r\n//     <div className=\"row mb-2 text-left\" key={index}>\r\n//         <div className=\"col-sm-1 text-center align-self-center\">\r\n        \r\n//         {selectedpayment === card ?\r\n//         <button className=\"btn btn-success\"> <i className=\"fa fa-check\"></i></button>\r\n//         :\r\n//         <button className=\"btn btn-light\" onClick={() => this.choosePayment(card)}><i className=\"fa fa-check\"></i></button>\r\n//         }\r\n//         </div>\r\n//         <div className=\"col-sm-7 font-weight-bold font-italic\">\r\n//             <div>{card.number}</div>\r\n//             <small>{card.expiry}</small>\r\n//         </div>\r\n//         <div className=\"col-sm-3\">\r\n//             {isdelete ? <button className=\"btn btn-danger float-right\" ><i className=\"fa fa-trash\"></i></button>:null}\r\n//             <button className=\"btn btn-primary float-right mr-2\" ><i className=\"fa fa-pencil\"></i></button>\r\n//             {/* onClick={() => handleEdit(card)} */}\r\n//         </div>\r\n//     </div>\r\n//     ))\r\n//     :\r\n//     <h6 className=\"col-sm-12 text-center align-self-center\">No saved cards</h6>\r\n    \r\n//     }","import user from './user.js'\r\n\r\nlet { addresses } = user;\r\n\r\nexport const addressObj = {\r\n    id:\"\",\r\n    addressLine1:\"\",\r\n    addressLine2:\"\",\r\n    landmark:\"\",\r\n    city:\"\",\r\n    isdefault: false\r\n}\r\n\r\nexport function getAddress() {\r\n    return addresses;\r\n}\r\n\r\nexport function getAddressById(addressId) {\r\n    return addresses.filter((address) => address.id === addressId);\r\n}\r\n\r\nexport function saveAddress(address) {\r\n    addresses.forEach(function(key){\r\n        key.isdefault = false;\r\n    });\r\n    \r\n    if(address.id === \"0\") {\r\n        const newId = addresses.length+1;\r\n        address.id = newId.toString()\r\n        address.isdefault = true;\r\n        addresses.push(address)\r\n        return address\r\n    } else {\r\n        const addressInDB = addresses.find((savedaddress) => savedaddress.id === address.id)\r\n        const index = addresses.indexOf(addressInDB)\r\n        addressInDB.id = address.id\r\n        addressInDB.addressLine1 = address.addressLine1\r\n        addressInDB.addressLine2 = address.addressLine2\r\n        addressInDB.landmark = address.landmark\r\n        addressInDB.city = address.city\r\n        addressInDB.isdefault = true;\r\n        addresses[index] = addressInDB\r\n        return addressInDB\r\n    }\r\n    \r\n}\r\n","import React from 'react';\r\n\r\nconst AddressForm = ({ data, errors, handleChange, handleSubmit, toggleClose}) => {\r\n    return ( \r\n        <div className=\"card-body text-left\">\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <div className=\"row mb-2\">\r\n                <div className=\"col-sm-12\">\r\n                    <label>Flat, House no., Building, Company, Apartment</label>\r\n                    <input type=\"text\" className={errors.addressLine1 ?  \"form-control is-invalid\": \"form-control\"} id=\"addressLine1\" name=\"addressLine1\" value={data.addressLine1} autoComplete=\"false\" onChange={(e) => handleChange(e)} placeholder=\"\" />\r\n                    {errors.addressLine1 && (\r\n                        <span className=\"help-block text-danger\">{errors.addressLine1}</span>\r\n                    )}\r\n                </div>\r\n                <div className=\"col-sm-12\">\r\n                    <label>Area, Colony, Street, Sector, Village</label>\r\n                    <input type=\"text\" className={errors.addressLine2 ?  \"form-control is-invalid\": \"form-control\"} id=\"addressLine2\" name=\"addressLine2\" value={data.addressLine2} autoComplete=\"false\" onChange={(e) => handleChange(e)} placeholder=\"\" />\r\n                    {errors.addressLine2 && (\r\n                        <span className=\"help-block text-danger\">{errors.addressLine2}</span>\r\n                    )}\r\n                </div>\r\n                <div className=\"col-sm-12\">\r\n                    <label>Landmark</label>\r\n                    <input type=\"text\" className={errors.landmark ?  \"form-control is-invalid\": \"form-control\"} id=\"landmark\" name=\"landmark\" value={data.landmark} autoComplete=\"false\" onChange={(e) => handleChange(e)} placeholder=\"\" />\r\n                    {errors.landmark && (\r\n                        <span className=\"help-block text-danger\">{errors.landmark}</span>\r\n                    )}\r\n                </div>\r\n                <div className=\"col-sm-12\">\r\n                    <label>Town/City</label>\r\n                    <input type=\"text\" className={errors.city ?  \"form-control is-invalid\": \"form-control\"} id=\"city\" name=\"city\" value={data.city} autoComplete=\"false\" onChange={(e) => handleChange(e)} placeholder=\"\" />\r\n                    {errors.city && (\r\n                        <span className=\"help-block text-danger\">{errors.city}</span>\r\n                    )}\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <button className=\"btn btn-primary btn-block\" onClick={(e) => handleSubmit(e)} disabled={Object.keys(errors).length > 0 ? false:true}>\r\n                        Save and deliver here\r\n                    </button>\r\n\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                    <button className=\"btn btn-primary btn-info btn-block\" onClick={() => toggleClose()}>Cancel</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n \r\nexport default AddressForm;","import { Component } from 'react';\r\nimport Joi from 'joi';\r\n\r\nclass Form extends Component {\r\n    state = { data:{}, errors:{} }\r\n    validate = () => {\r\n        const { error } = Joi.object(this.schema).validate(this.state.data);\r\n        if(error) {\r\n            const errors = {};\r\n            for (let item of error.details) errors[item.path[0]] = item.message;\r\n            return errors;\r\n        }else {\r\n            return null\r\n        }\r\n    };\r\n    \r\n    validateProperty = ({ name, value }) => {\r\n        const obj = { [name]: value };\r\n        const schema = Joi.object({\r\n            [name]: this.schema[name]\r\n        });\r\n        const { error } = schema.validate(obj);\r\n        return error ? error.details[0].message : null;\r\n    };\r\n\r\n    handleChange = ({ currentTarget: input }) => {\r\n        const errors = { ...this.state.errors };\r\n        const errorMessage = this.validateProperty(input);\r\n        if (errorMessage) errors[input.name] = errorMessage;\r\n        else delete errors[input.name];\r\n\r\n        const data = { ...this.state.data };\r\n        data[input.name] = input.value;\r\n        this.setState({ data, errors });\r\n        \r\n    };\r\n    render() { \r\n        return null;\r\n    }\r\n}\r\n \r\nexport default Form;","import React from 'react';\r\n\r\nconst UserAddress = ({addressData, selectedAddress, handleEdit, isdelete}) => {\r\n    return (\r\n        addressData.length > 0 ?\r\n\r\n        addressData.map((address) => (\r\n            <div className=\"row mb-2 text-left\" key={address.id}>\r\n                <div className=\"col-sm-1 text-center align-self-center\">\r\n                    {address.isdefault ?\r\n                    <button className=\"btn btn-success\"> <i className=\"fa fa-check\"></i></button>\r\n                    :\r\n                    <button className=\"btn btn-light\" onClick={() => selectedAddress(address)}><i className=\"fa fa-check\"></i></button>\r\n                    }\r\n                </div>\r\n                <div className=\"col-sm-7 font-weight-bold font-italic\">\r\n                    {address.addressLine1} {address.addressLine2} {address.landmark} {address.city}\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    {isdelete ? <button className=\"btn btn-danger float-right\" ><i className=\"fa fa-trash\"></i></button>:null}\r\n                    <button className=\"btn btn-primary float-right mr-2\" onClick={() => handleEdit(address)}><i className=\"fa fa-pencil\"></i></button>\r\n                </div>\r\n            </div>\r\n        ))\r\n        :\r\n        <h6 className=\"col-sm-12 text-center align-self-center\">No saved address</h6>\r\n    );\r\n}\r\n \r\nexport default UserAddress;","import React from 'react';\r\nimport Joi from 'joi';\r\nimport { saveAddress } from '../services/address';\r\nimport AddressForm from './AddressForm';\r\nimport Form from './Form';\r\nimport UserAddress from './UserAddress';\r\n\r\nclass Address extends Form {\r\n    state = {\r\n        data: {\r\n            \"id\":\"0\",\r\n            \"addressLine1\":\"\",\r\n            \"addressLine2\":\"\",\r\n            \"landmark\":\"\",\r\n            \"city\":\"\",\r\n            \"isdefault\": false\r\n        },\r\n        errors:{},\r\n        toggleAddress: false\r\n    }\r\n\r\n    schema = {\r\n        id: Joi.string(),\r\n        addressLine1: Joi.string().min(5).required().label(\"Flat, House no., Building, Company, Apartment\"),\r\n        addressLine2: Joi.string().min(5).required().label(\"Area, Colony, Street, Sector, Village\"),\r\n        landmark: Joi.string().min(5).required().label(\"Landmark\"),\r\n        city: Joi.string().min(5).required().label(\"Town/City\"),\r\n        isdefault: Joi.boolean()\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const errors = this.validate();\r\n        this.setState({ errors: errors || {} });\r\n        if (errors) return;\r\n        \r\n        const address = saveAddress(this.state.data);\r\n        this.selectedAddress(address);\r\n        this.toggleClose();\r\n        this.setState({ data: {\r\n            \"id\":\"0\",\r\n            \"addressLine1\":\"\",\r\n            \"addressLine2\":\"\",\r\n            \"landmark\":\"\",\r\n            \"city\":\"\",\r\n            \"isdefault\": false\r\n        }});\r\n    };\r\n\r\n    handleEdit = (address) => {\r\n        this.toggleOpen();\r\n        const addressdata = {...this.state.data};\r\n        addressdata.id = address.id\r\n        addressdata.addressLine1 = address.addressLine1\r\n        addressdata.addressLine2 = address.addressLine2\r\n        addressdata.landmark = address.landmark\r\n        addressdata.city = address.city\r\n        addressdata.isdefault = true\r\n        this.setState({ data: address });\r\n    }\r\n\r\n    toggleOpen = () => {\r\n        this.setState({ toggleAddress: true })\r\n    }\r\n\r\n    toggleClose = () => {\r\n        this.setState({\r\n        toggleAddress: false,\r\n        errors: {},\r\n        data: {\r\n            \"id\":\"0\",\r\n            \"addressLine1\":\"\",\r\n            \"addressLine2\":\"\",\r\n            \"landmark\":\"\",\r\n            \"city\":\"\",\r\n            \"isdefault\": false\r\n        }});\r\n    }\r\n    selectedAddress = (address) => {\r\n        this.props.selectedAddress(address);\r\n    }\r\n\r\n    render() { \r\n        const { addressData, isdelete } = this.props;\r\n        const { data, toggleAddress, errors } = this.state;\r\n        return (\r\n            <div className=\"card\">\r\n            <div className=\"card-header h5 text-left\">Address</div>\r\n            <div className=\"card-body text-left\">\r\n            <h5 className=\"card-title\">My addresses</h5>\r\n            <UserAddress \r\n                addressData={addressData}\r\n                selectedAddress={this.selectedAddress}\r\n                handleEdit={this.handleEdit}\r\n                isdelete={isdelete}\r\n            />   \r\n            </div>\r\n            {toggleAddress ? \r\n            <AddressForm \r\n                data={data}\r\n                errors={errors}\r\n                handleChange={this.handleChange}\r\n                handleSubmit={this.handleSubmit}\r\n                toggleClose={this.toggleClose}\r\n            />\r\n            :\r\n            <div className=\"col-sm-12 mb-2\">\r\n                <button className=\"btn btn-primary col-sm-3 text-center\" onClick={this.toggleOpen}>Add new address</button>\r\n            </div>\r\n            \r\n            }\r\n            </div>   \r\n            \r\n         );\r\n    }\r\n}\r\n \r\nexport default Address;\r\n","const products = [\r\n    {\r\n        \"id\":\"1\",\r\n        \"type\":\"Burger\",\r\n        \"name\":\"Cheese Burger\",\r\n        \"desc\":\"cheese burger\",\r\n        \"img\":\"/images/burger1.jpg\",\r\n        \"price\":150\r\n    },\r\n    {\r\n        \"id\": \"2\",\r\n        \"type\": \"Burger\",\r\n        \"name\": \"Grilled ham Burger\",\r\n        \"desc\": \"grilled ham burger\",\r\n        \"img\":\"/images/burger2.jpg\",\r\n        \"price\":180\r\n    },\r\n    {\r\n        \"id\": \"3\",\r\n        \"type\": \"Wraps\",\r\n        \"name\": \"Big ham Burger\",\r\n        \"desc\": \"larger grilled ham burger\",\r\n        \"img\":\"/images/burger3.png\",\r\n        \"price\":120\r\n    },\r\n    {\r\n        \"id\": \"4\",\r\n        \"type\": \"Wraps\",\r\n        \"name\": \"Bacon Burger\",\r\n        \"desc\": \"larger grilled Bacon burger\",\r\n        \"img\":\"/images/burger4.jpg\",\r\n        \"price\":210\r\n    },\r\n    {\r\n        \"id\": \"5\",\r\n        \"type\": \"Wraps\",\r\n        \"name\": \"FFF Special Burger\",\r\n        \"desc\": \"Grilled chicken with extra Bacon and cheese burger\",\r\n        \"img\":\"/images/burger5.jpg\",\r\n        \"price\":110\r\n    },\r\n    {\r\n        \"id\": \"6\",\r\n        \"type\": \"Burger\",\r\n        \"name\": \"FFF Chicken\",\r\n        \"desc\": \"Grilled chicken with extra Bacon and cheese burger\",\r\n        \"img\":\"/images/burger6.jpg\",\r\n        \"price\":105\r\n    }\r\n]\r\n\r\nexport function getProducts() {\r\n    return products;\r\n}\r\n\r\nexport function getProduct(id) {\r\n    return products.find((product) => product.id === id);\r\n}","import user from './user.js'\r\n\r\nconst { cart } = user\r\n\r\n//const cart = [\r\n    // {\r\n    //     \"productId\": \"3\",\r\n    //     \"selectedItems\": 2\r\n    // }\r\n//]\r\n\r\n\r\nexport function getCartItems() {\r\n    return cart;\r\n}\r\n\r\n\r\nexport function getTotalItems() {\r\n    return cart.length;\r\n}\r\n\r\nexport function addToCart(product) {\r\n    const inCart = cart.find((cartobj) => cartobj.productId === product.id)\r\n    if(inCart) {\r\n        const index = cart.indexOf(inCart);\r\n        cart[index].selectedItems++\r\n    } else {\r\n        cart.push({\r\n            \"productId\": product.id,\r\n            \"selectedItems\": 1\r\n        })\r\n    }\r\n    return cart;\r\n}\r\n\r\nexport function removeFromCart(product) {\r\n    const inCart = cart.find(cartobj => cartobj.productId === product.id);\r\n    if(inCart) {\r\n        const index = cart.indexOf(inCart);\r\n        let itemCount = cart[index].selectedItems;\r\n        cart[index].selectedItems--\r\n        itemCount = cart[index].selectedItems;\r\n        if(itemCount === 0) deleteFromCart(product)\r\n    }\r\n    return cart;\r\n}\r\n\r\nexport function deleteFromCart(product) {\r\n    const cartobj = cart.find(cartobj => cartobj.productId === product.id);\r\n    cart.splice(cart.indexOf(cartobj), 1)\r\n    return cart;\r\n}","import user from './user.js'\r\n\r\nconst { payments } = user\r\n\r\nexport function getPaymentOptions() {\r\n    return payments;\r\n}\r\n\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nconst CartProducts = ({products, addToCart, removeFromCart, deleteFromCart}) => {\r\n    return (\r\n        products.length > 0 ? \r\n\r\n        products.map((product) => (\r\n            <div className=\"card text-left\" key={product.id}>\r\n                <div className=\"card-body\">\r\n                <img src={product.img} className=\"float-left col-sm-1\" alt=\"\"></img>\r\n                <h5 className=\"card-title float-left mt-2\">\r\n                    {product.name} \r\n                </h5>\r\n                <div className=\"col-sm-3 float-right\">\r\n                    <button\r\n                        className=\"btn btn-primary float-left mr-2\"\r\n                        onClick={() => addToCart(product)}\r\n                    >\r\n                    <i className=\"fa fa-plus\"></i>\r\n                    </button>\r\n                    <span className=\"mt-1 float-left mr-2\">\r\n                        {product.selectedItems ? product.selectedItems : 0}\r\n                    </span>\r\n                    <button\r\n                        className=\"btn btn-info mr-3\"\r\n                        onClick={() => removeFromCart(product)}\r\n                        disabled={product.selectedItems ? false : true}\r\n                    >\r\n                    <i className=\"fa fa-minus\"></i>\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={() => deleteFromCart(product)}\r\n                    >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        ))\r\n\r\n        :\r\n                    \r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Your cart is empty!</h5>\r\n                <Link to=\"/\">\r\n                    <button className=\"btn btn-primary\">Add</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default CartProducts;","import React from 'react';\r\n\r\nconst CartSummary = ({products, grandtotal}) => {\r\n    return ( \r\n        <div className=\"col-sm-4\">\r\n            <div className=\"card text-left sticky-top\">\r\n            {products.length > 0 ?\r\n\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title text-center\">Summary</h5>\r\n                    {products.map((product) => (\r\n                        <div className=\"card-text h6\" key={product.id}>\r\n                            <div className=\"col mb-2\">\r\n                                {product.name}\r\n                                <span className=\"float-right\">₹{product.total}</span>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    <hr/>\r\n                    <div className=\"card-text h5\">\r\n                        <div className=\"col mb-2\">\r\n                            Total\r\n                            <span className=\"float-right\"><h4>₹{grandtotal}</h4></span>\r\n                        </div>\r\n                    </div>\r\n                    <span className=\"btn btn-success btn-block\">\r\n                    Place Order\r\n                    </span>\r\n                </div>\r\n                \r\n                :\r\n\r\n                <div className=\"card-body text-center\">\r\n                    <h5 className=\"card-title\">Summary</h5>\r\n                    <p className=\"card-text\">\r\n                        No items in cart!\r\n                    </p>\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n \r\nexport default CartSummary;","import React from 'react';\r\n\r\nconst CardForm = ({ errors, handleInputChange, handleInputFocus }) => {\r\n    return (\r\n        <>  \r\n        <div className=\"col-sm-9 mb-3\">\r\n            <input\r\n                type=\"tel\" \r\n                className={errors.number ? \"form-control is-invalid\": \"form-control\"} \r\n                onKeyUp={(e) => handleInputChange(e)} \r\n                onFocus={(e) => handleInputFocus(e)} \r\n                id=\"number\" \r\n                name=\"number\"\r\n                autoComplete=\"false\" \r\n                maxLength=\"19\"\r\n                placeholder=\"Card Number\" \r\n            />\r\n        </div>\r\n        <div className=\"col-sm-9 mb-3\">\r\n            <input\r\n                type=\"text\" \r\n                className={errors.name ? \"form-control is-invalid\": \"form-control\"} \r\n                onKeyUp={(e) => handleInputChange(e)} \r\n                onFocus={(e) => handleInputFocus(e)} \r\n                id=\"name\" \r\n                name=\"name\" \r\n                autoComplete=\"false\" \r\n                placeholder=\"Name\" \r\n            />\r\n        </div>\r\n        <div className=\"col\">\r\n            <div className=\"row\">\r\n            <div className=\"col-sm-5\">\r\n                <input\r\n                    type=\"tel\" \r\n                    className={errors.expiry ? \"form-control is-invalid\": \"form-control\"} \r\n                    onKeyUp={(e) => handleInputChange(e)} \r\n                    onFocus={(e) => handleInputFocus(e)} \r\n                    id=\"expiry\" \r\n                    name=\"expiry\" \r\n                    autoComplete=\"false\" \r\n                    placeholder=\"Valid Thru\" \r\n                />\r\n            </div>\r\n            <div className=\"col-sm-3\">\r\n                <input\r\n                    type=\"tel\" \r\n                    className={errors.cvc ? \"form-control is-invalid\": \"form-control\"} \r\n                    onKeyUp={(e) => handleInputChange(e)} \r\n                    onFocus={(e) => handleInputFocus(e)} \r\n                    id=\"cvc\" \r\n                    name=\"cvc\" \r\n                    autoComplete=\"false\" \r\n                    placeholder=\"CVC\" \r\n                />\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default CardForm;\r\n","import React, { Component } from 'react';\r\nimport CardForm from './CardForm';\r\nimport Cards from 'react-credit-cards';\r\nimport Payment from 'payment';\r\n\r\nclass Card extends Component {\r\n    state = {  }\r\n    componentDidMount() {\r\n        Payment.formatCardNumber(document.querySelector('[name=\"number\"]'));\r\n        Payment.formatCardExpiry(document.querySelector('[name=\"expiry\"]'));\r\n        Payment.formatCardCVC(document.querySelector('[name=\"cvc\"]'));\r\n    }\r\n    render() {\r\n        const { data, focus, errors, handleInputChange, handleInputFocus, isValidCallback, handleSubmit, toggleClose, isValid } = this.props \r\n        return (  \r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                            <Cards\r\n                                cvc={data.cvc}\r\n                                expiry={data.expiry}\r\n                                focused={focus}\r\n                                name={data.name}\r\n                                number={data.number}\r\n                                callback={(type, isValid) => isValidCallback(type, isValid)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-6 mt-3\">\r\n                            <CardForm \r\n                                errors={errors}\r\n                                handleInputChange={(e) => handleInputChange(e)}\r\n                                handleInputFocus={(e) => handleInputFocus(e)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col-sm-6\">\r\n                            <button className=\"btn btn-primary btn-block\" onClick={(e) => handleSubmit(e)} disabled={isValid ? false : true}>\r\n                                Save and choose \r\n                            </button>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <button className=\"btn btn-primary btn-info btn-block\" onClick={() => toggleClose()}>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Card;\r\n\r\n","import React, { Component } from 'react';\r\nimport 'react-credit-cards/es/styles-compiled.css';\r\n\r\n\r\nimport Card from './Card';\r\n\r\nclass Payments extends Component {\r\n    state = { \r\n        data: {\r\n            cvc: '',\r\n            expiry: '',\r\n            name: '',\r\n            number: '',\r\n        },\r\n        focus: '',\r\n        errors:{},\r\n        selectedpayment:{},\r\n        isValid: false,\r\n        toggleCard:false\r\n    }\r\n\r\n    choosePayment = (card) => {\r\n        if(card) this.setState({ selectedpayment: card })\r\n        else this.setState({ selectedpayment:\"cashondelivery\" })\r\n    }\r\n    \r\n    handleInputFocus = (e) => {\r\n        this.setState({ focus: e.target.name });\r\n    }\r\n      \r\n    handleInputChange = (e) => {\r\n        const target = e.target;\r\n        const data = {...this.state.data}\r\n        if (target.name === 'number') {\r\n            data[target.name] = target.value.replace(/ /g, '');\r\n            this.setState({ data });\r\n        }\r\n        else if (target.name === 'expiry') {\r\n            data[target.name] = target.value.replace(/ |\\//g, '');\r\n            this.setState({ data });\r\n        }\r\n        else {\r\n            data[target.name] = target.value\r\n            this.setState({ data });\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n\r\n    }\r\n\r\n    isValidCallback(type, isValid) {\r\n        this.setState({ isValid })\r\n    }\r\n\r\n\r\n    toggleOpen = () => {\r\n        this.setState({ toggleCard: true })\r\n    }\r\n\r\n    toggleClose = () => {\r\n        this.setState({\r\n            toggleCard: false,\r\n            errors: {},\r\n            data: {\r\n                cvc: '',\r\n                expiry: '',\r\n                focus: '',\r\n                name: '',\r\n                number: '',\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { payments, isdelete } = this.props;\r\n         const { data, focus, toggleCard, errors, selectedpayment, isValid } = this.state;\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-header h5 text-left\">Payments</div>\r\n                <div className=\"card-body text-left\">\r\n                    <h5 className=\"card-title\">My cards</h5>\r\n                    {payments.cards.length > 0 ?\r\n\r\n                        payments.cards.map((card,index) => (\r\n                        <div className=\"row mb-2 text-left\" key={index}>\r\n                            <div className=\"col-sm-1 text-center align-self-center\">\r\n                            \r\n                            {selectedpayment === card ?\r\n                            <button className=\"btn btn-success\"> <i className=\"fa fa-check\"></i></button>\r\n                            :\r\n                            <button className=\"btn btn-light\" onClick={() => this.choosePayment(card)}><i className=\"fa fa-check\"></i></button>\r\n                            }\r\n                            </div>\r\n                            <div className=\"col-sm-7 font-weight-bold font-italic\">\r\n                                <div>{card.number}</div>\r\n                                <small>{card.expiry}</small>\r\n                            </div>\r\n                            <div className=\"col-sm-3\">\r\n                                {isdelete ? <button className=\"btn btn-danger float-right\" ><i className=\"fa fa-trash\"></i></button>:null}\r\n                                <button className=\"btn btn-primary float-right mr-2\" ><i className=\"fa fa-pencil\"></i></button>\r\n                                {/* onClick={() => handleEdit(card)} */}\r\n                            </div>\r\n                        </div>\r\n                        ))\r\n                        :\r\n                        <h6 className=\"col-sm-12 text-center align-self-center\">No saved cards</h6>\r\n                        \r\n                    }\r\n                    {toggleCard ? \r\n                    \r\n                        <Card \r\n                            data={data}\r\n                            focus={focus}\r\n                            errors={errors}\r\n                            handleInputFocus={this.handleInputFocus}\r\n                            handleInputChange={this.handleInputChange}\r\n                            handleSubmit={this.handleSubmit}\r\n                            isValidCallback={this.isValidCallback.bind(this)}\r\n                            toggleClose={this.toggleClose}\r\n                            isValid={isValid}\r\n                        />\r\n                        \r\n                    :\r\n                        \r\n                        <div className=\"col-sm-12 mb-2 text-center\">\r\n                            <button className=\"btn btn-primary col-sm-3 \" onClick={this.toggleOpen}>Add new card</button>\r\n                        </div>\r\n                    \r\n                    }\r\n                    <h5 className=\"card-title\">Other options</h5>\r\n                    <div className=\"row mb-2 text-left\">\r\n                        <div className=\"col-sm-1 text-center align-self-center\">\r\n                            {selectedpayment === \"cashondelivery\" ?\r\n                            <button className=\"btn btn-success\"> <i className=\"fa fa-check\"></i></button>\r\n                            :\r\n                            <button className=\"btn btn-light\" onClick={() => this.choosePayment()}><i className=\"fa fa-check\"></i></button>\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-sm-7 mt-1 font-weight-bold font-italic\">\r\n                            Cash on delivery\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Payments;","import React, { Component } from \"react\";\r\nimport Address from \"./Address\";\r\nimport { getProducts } from '../services/product';\r\nimport { addToCart, removeFromCart, deleteFromCart, getCartItems } from '../services/cart';\r\nimport { getPaymentOptions } from \"../services/payments\";\r\nimport { getAddress } from \"../services/address\";\r\nimport CartProducts from \"./CartProducts\";\r\nimport CartSummary from \"./CartSummary\";\r\nimport Payments from \"./Payments\";\r\n\r\n\r\nclass Cart extends Component {\r\n    state = {\r\n        products: [],\r\n        cart: [],\r\n        address: [],\r\n        payments:[],\r\n        deliveryaddress: {},\r\n        paymentby:{},\r\n        grandtotal: 0\r\n    }\r\n    componentDidMount() {\r\n        let products = getProducts();\r\n        let cart = getCartItems();\r\n        let address = getAddress();\r\n        let payments = getPaymentOptions();\r\n        let deliveryaddress = this.setDeliveryAddress(address);\r\n        products = this.mapProducts(cart,products);\r\n        this.setState({ products, cart, address, deliveryaddress, payments })\r\n    }\r\n    mapProducts = (cart,products) => {\r\n        let grandtotal = 0;\r\n        products = cart.map((cartObj) => {\r\n            let product = products.find(\r\n                (product) => product.id === cartObj.productId\r\n            );\r\n            product = { ...product, total:product.price*cartObj.selectedItems, selectedItems: cartObj.selectedItems };\r\n            grandtotal += product.total;\r\n            return product;\r\n        });\r\n        this.setState({ grandtotal });\r\n        return products;\r\n    }\r\n\r\n    setDeliveryAddress = (addressData) => {\r\n        let address = addressData.find((address) => address.isdefault === true)\r\n        address = address ? address: {}\r\n        return address\r\n    }\r\n\r\n    changeDeliveryAddress = (address) => {\r\n        const addresses = [...this.state.address]\r\n        const index = addresses.indexOf(address);\r\n        addresses.forEach(function(key){\r\n            key.isdefault = false;\r\n        });\r\n        addresses[index].isdefault = true;\r\n        this.setState({ address:addresses,deliveryaddress:address })\r\n    }\r\n\r\n    addToCart = (product) => {\r\n        const cart = addToCart(product)\r\n        const products = this.mapProducts(cart,this.state.products)\r\n        this.props.handleCartCount();\r\n        this.setState({ products, cart });\r\n    }\r\n\r\n    removeFromCart = (product) => {\r\n        const cart = removeFromCart(product);\r\n        const products = this.mapProducts(cart,this.state.products)\r\n        this.props.handleCartCount();\r\n        this.setState({ products, cart });\r\n    }\r\n\r\n    deleteFromCart = (product) => {\r\n        const cart = deleteFromCart(product);\r\n        const products = this.mapProducts(cart,this.state.products)\r\n        this.props.handleCartCount();\r\n        this.setState({ products, cart });\r\n    }\r\n\r\n    render() {\r\n        const { products, payments, address, grandtotal } = this.state;\r\n        return ( \r\n            <React.Fragment>\r\n                <div className=\"row\">\r\n                <div className=\"col-sm-8\">\r\n                    <div className=\"card-header h5 text-left\">My Cart</div>\r\n                    <CartProducts\r\n                        products={products}\r\n                        addToCart={this.addToCart}\r\n                        removeFromCart={this.removeFromCart}\r\n                        deleteFromCart={this.deleteFromCart}\r\n                    />\r\n                    {products.length > 0 ?\r\n                    <>\r\n                        <Address\r\n                        addressData={address}\r\n                        isdelete={false} \r\n                        selectedAddress={this.changeDeliveryAddress} \r\n                    />\r\n                    <Payments payments={payments} />\r\n                    </>\r\n                    :\r\n                    null\r\n                    }\r\n                </div>\r\n                \r\n                <CartSummary products={products} grandtotal={grandtotal} isdelete={false} />\r\n                \r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Cart;\r\n\r\n","// import React, { Component } from 'react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import { getTotalItems } from '../services/cart';\r\n\r\n const Navbar = ({ totalCartItems }) => {\r\n     return ( \r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\" style={{zIndex:\"auto\"}}>\r\n            <span className=\"navbar-brand col-sm-3 col-md-2 mr-0 \">foodie fast foods</span>\r\n            {/* <input className=\"form-control form-control-dark w-100\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" /> */}\r\n            \r\n            \r\n            <div className=\"navbar-nav ml-auto\">\r\n                <div className=\"collapse navbar-collapse\">\r\n                    <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                        <Link className=\"nav-item nav-link home\" to=\"/\">\r\n                            <i className=\"fa fa-home fa-lg\"></i> &nbsp;\r\n                        </Link>\r\n                        <Link className=\"nav-item nav-link home\" to=\"/\" title=\"Orders\">\r\n                            <i className=\"fa fa-shopping-bag fa-lg\"></i>\r\n                        </Link>\r\n                        <Link className=\"nav-item nav-link cart\" to=\"/cart\">\r\n                            <i className=\"fa fa-shopping-cart fa-lg\"></i> &nbsp;<span className=\"badge badge-primary\">{totalCartItems > 0 ? totalCartItems:null }</span>\r\n                        </Link>\r\n                    </ul>\r\n                </div>\r\n                {/* <form className=\"form-inline my-5 my-lg-0\">\r\n                    <button className=\"btn btn-outline-primary my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                </form> */}\r\n            </div>\r\n        </nav>\r\n\r\n    );\r\n }\r\n \r\n export default Navbar;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Card, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n import { getCartItems, addToCart, removeFromCart } from '../services/cart';\r\nimport { getProducts } from '../services/product';\r\n\r\nclass Products extends Component {\r\n    state = { \r\n         products: []\r\n    }\r\n\r\n    mapProducts = (cart,products) => {\r\n        products = products.map((product) => {\r\n            const inCart = cart.find((item) => item.productId === product.id);\r\n            if(inCart) product = {...product, selectedItems: inCart.selectedItems }\r\n            else delete product.selectedItems;\r\n            return product;\r\n        })\r\n        return products;\r\n    }\r\n\r\n    addToCart = (product) => {\r\n        const cart = addToCart(product)\r\n        const products = this.mapProducts(cart,this.state.products)\r\n        this.props.handleCartCount();\r\n        this.setState({ products });\r\n    }\r\n\r\n    removeFromCart = (product) => {\r\n        const cart = removeFromCart(product);\r\n        const products = this.mapProducts(cart,this.state.products)\r\n        this.props.handleCartCount();\r\n        this.setState({ products });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let cart = getCartItems();\r\n        let products = getProducts();\r\n        products = this.mapProducts(cart,products);\r\n        this.setState({ products })\r\n    }\r\n    render() {\r\n        const { products } = this.state; \r\n        return ( \r\n            <div className=\"row\">\r\n                {products.map((product) => (\r\n                    <div key={product.id} className=\"col-sm-2 pb-2\">\r\n                        <Card key={product.id}>\r\n                            <Card.Img variant=\"top\" src={product.img} />\r\n                            <Card.Body>\r\n                                <Card.Title className=\"h6\">\r\n                                    {product.name}\r\n                                    &nbsp;\r\n                                    <OverlayTrigger\r\n                                        placement=\"bottom\"\r\n                                        delay={{ show: 250, hide: 400 }}\r\n                                        overlay={<Tooltip> {product.desc} </Tooltip>}\r\n                                    >\r\n                                    <i className=\"fa fa-info-circle\"></i>\r\n                                    </OverlayTrigger>\r\n                                </Card.Title>\r\n\r\n                                <Card.Text>₹{product.price}</Card.Text>\r\n\r\n                                <div className=\"row no-gutters\">\r\n                                    <div className=\"col-sm\">\r\n                                        <button className=\"btn btn-primary btn-block\" onClick={() => this.addToCart(product)}>\r\n                                            <i className=\"fa fa-plus\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                        <label className=\"mt-1\">{ product.selectedItems ? product.selectedItems : 0 }</label>\r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                        <button className=\"btn btn-danger btn-block\" onClick={() => this.removeFromCart(product)} disabled={product.selectedItems ? false : true}>\r\n                                            <i className=\"fa fa-minus\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Products;\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Cart from './Cart';\r\nimport Navbar from './Navbar';\r\n//import Sidenavbar from './Sidenavbar';\r\nimport Products from './Products';\r\nimport { getTotalItems } from '../services/cart';\r\n\r\n\r\nclass Container extends Component {\r\n    state = {\r\n        totalCartItems: 0\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ totalCartItems: getTotalItems() })\r\n    }\r\n    handleCartCount = () => {\r\n        this.setState({ totalCartItems: getTotalItems() })\r\n    } \r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            <Navbar totalCartItems={this.state.totalCartItems} />\r\n            <main role=\"main\" className=\"col-md-12 col-lg-12 px-4\">\r\n                <Switch>\r\n                    <Route path=\"/\" exact > <Products handleCartCount={() => this.handleCartCount()} /> </Route>\r\n                    <Route path=\"/cart\" > <Cart handleCartCount={() => this.handleCartCount()} /> </Route>\r\n                    <Redirect to=\"/not-found\" />\r\n                </Switch>\r\n            </main>\r\n            </React.Fragment>\r\n            \r\n         );\r\n    }\r\n}\r\n \r\nexport default Container;","import React from 'react';\nimport './App.css';\nimport Container from './components/Container';\n\nfunction App() {\n  return (\n    \n    <div className=\"App wrapper\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <Container />\n        </div>\n      </div>\n      \n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport './sidebar.css'\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}